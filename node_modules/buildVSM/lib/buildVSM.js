/**
 * @author: Mostafa Bayomi
 * bayomim@tcd.ie
 * 
 * This module converts the given text (as array of sentences) into their classes from DBpedia.
 */

var dbp_annotate = require('dbp_annotate');


var vsm = [];
var n;
var vsmLen = 0;
var sentences = [];

exports.build = function (text, sentinise, cb) {
    
	var dummy ="";
        sentences = text;
		// convert it into raw text to be sent to dbp spotlight
		text = text.join(" ");
		 
    var start = -1;
    var end = 0;
    var ontoSentences = [];
    var obj = { s: text, index: 0 }; // no reason for index:0;
    dbp_annotate.annotate(obj,function (m) {
            var inde = m.index;
            var val = m.o;
            vsm[inde] = val; // set of entities in text
            for (var i = 0; i < sentences.length; i++) {
                // this trim to remove the whitespace from the end of each sentence
                var senten = sentences[i];
                if (i > 0) {
               // for all sentences, after the first one, we add the whitespace to the start of it
                    senten = " " + senten;
                }
                end = start + senten.length;
               
                var ontosen = [];
                for (var j = 0; j < vsm[0].length; j++) { // offsets array
                    var offs = vsm[0][j].offs;
                    var onto = vsm[0][j].onto;
                    if (offs > start && offs < end) {
                        ontosen.push(onto);
                    }
                }
                ontoSentences.push(ontosen);
                start = end;
            }
			
            cb(ontoSentences);
           
        });
}


//buildvsm(input1);